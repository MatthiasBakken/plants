{"version":3,"sources":["components/settings/Settings.js","components/header/Header.js","components/menu/Menu.js","components/plant/Plant.js","components/plants/Plants.js","components/plant-page/PlantPage.js","components/create-new-plants/CreateNewPlant.js","components/edit-plant/EditPlant.js","components/signup/Signup.js","components/login/Login.js","components/user/User.js","App.js","reportWebVitals.js","index.js"],"names":["ChangePasswordSchema","Yup","shape","password","min","max","required","ChangePhoneNumberSchema","phoneNumber","jwtToken","localStorage","getItem","userId","Settings","props","pageTitle","useEffect","className","initialValues","validationSchema","onSubmit","values","e","stopPropagation","axios","put","headers","authorization","then","res","data","errors","touched","isValid","dirty","testid","name","placeholder","type","disabled","parseInt","replace","phone_number","Header","propsTitle","useState","title","setTitle","window","screen","availWidth","to","onClick","clear","location","Menu","id","htmlFor","Plant","plantData","nickname","species","h2o_frequency","image","src","alt","delete","plant_id","catch","err","Plants","plants","setPlants","get","map","plant","initialPlant","PlantPage","setPlant","params","URLSearchParams","search","toUpperCase","console","log","CreatePlantForm","changeHandler","target","value","preventDefault","post","plantRes","userRes","onChange","EditPlant","plantId","useLocation","pathname","split","length","SignupSchema","username","Signup","setItem","token","base64","JSON","parse","atob","parseJwt","subject","LoginSchema","Login","history","hr","Date","getHours","message","push","loginMsg","User","App","pageTitleHandler","exact","path","render","routeProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31015d21.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nimport './settings.scss';\n\n\nconst ChangePasswordSchema = Yup.object().shape( {\n  password: Yup.string()\n    .min( 8, 'Must be at least 8 characters long' )\n    .max( 24, 'Must be no more than 24 characters long' )\n    .required( 'Some value is required to update your password' )\n} );\n\nconst ChangePhoneNumberSchema = Yup.object().shape( {\n  phoneNumber: Yup.string()\n    .min( 7, 'Number is too short' )\n    .max(15, 'Number is too long')\n    .required( 'Must enter a valid number if you plan to update' )\n} );\n\nconst jwtToken = localStorage.getItem( \"jwtToken\" );\nconst userId = localStorage.getItem( \"userId\" );\n\nconst Settings = ( props ) => {\n  const { pageTitle } = props;\n\n  useEffect( () => {\n    pageTitle( \"SETTINGS\" );\n  }, [] );\n\n  return (\n    <div className=\"settings-container\">\n      {\n        jwtToken ?\n          <div className=\"settings-forms-container\">\n            <Formik\n              initialValues={{\n                password: ''\n              }}\n      \n              validationSchema={ChangePasswordSchema}\n      \n              onSubmit={( values, e ) => {\n                e.stopPropagation();\n                axios.put( `https://tt157-backend.herokuapp.com/api/users/${userId}`, {\n                  password: values.password\n                }, {\n                  headers: { authorization: `bearer ${jwtToken}` }\n                } ).then( res => {\n                  return res.data;\n                } );\n              }}\n            >\n              {( { errors, touched, isValid, dirty, values } ) => (\n                <Form className=\"settings_forms\" testid=\"form1\">\n                  <label className=\"update_pass\">Update Password</label>\n                  <Field name=\"password\" placeholder=\"abcD1234?\" />\n                  {errors.password && touched.password ? (\n                    <div testid=\"error-div-password\">{errors.password}</div>\n                  ) : null}\n                  <span testid=\"settings-password-span\">\n                    <button\n                      type=\"submit\"\n                      disabled={!( dirty && isValid && values.password )}\n                      testid=\"settings-password-submit\"\n                    >\n                      Submit\n                    </button>\n                  </span>\n                </Form>\n              )}\n            </Formik>\n            <Formik\n              initialValues={{\n                phoneNumber: ''\n              }}\n      \n              validationSchema={ChangePhoneNumberSchema}\n      \n              onSubmit={( values, e ) => {\n                e.stopPropagation();\n                let phoneNumber = parseInt( values.phoneNumber.replace( /[^0-9]/g, '' ) );\n                axios.put( `https://tt157-backend.herokuapp.com/api/users/${userId}`, {\n                  phone_number: phoneNumber\n                }, {\n                  headers: { authorization: `bearer ${jwtToken}` }\n                } ).then( res => {\n                  return res.data;\n                } );\n              }}\n            >\n              {( { errors, touched, isValid, dirty, values } ) => (\n                <Form className=\"settings_forms\" testid=\"form2\">\n                  <label className=\"update_phone\">Update Phone Number</label>\n                  <Field name=\"phoneNumber\" placeholder=\"555-123-4567\" />\n                  {errors.phoneNumber && touched.phoneNumber ? (\n                    <div testid=\"error-div-phoneNumber\">{errors.phoneNumber}</div>\n                  ) : null}\n                  <span testid=\"settings-phoneNumber-span\">\n                    <button\n                      type=\"submit\"\n                      disabled={!( dirty && isValid && values.phoneNumber )}\n                      testid=\"settings-phoneNumber-submit\"\n                    >\n                      Submit\n                    </button>\n                  </span>\n                </Form>\n              )}\n            </Formik>\n          </div>\n          :\n          <div>\n            ...\n          </div>\n      }\n    </div>\n  );\n};\n\nexport default Settings;","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RiSettings3Line, RiShutDownLine } from 'react-icons/ri'\n\nimport './header.scss';\n\n\nconst Header = ( props ) => {\n  \n  let propsTitle = props.propsTitle;\n  const [ title, setTitle ] = useState( \"\" );\n\n  useEffect( () => {\n    setTitle( propsTitle );\n    return title;\n  }, [ props.propsTitle ] );\n\n  const onClickHandler = () => {\n    localStorage.clear();\n    window.location.replace( '/' );\n  };\n\n  if ( title === \"LOGIN\" || title === \"CREATE ACCOUNT\" || window.screen.availWidth < 670 ) {\n    return (\n      <div className=\"header\">\n        <h1 className=\"headerLogo\">{`${title}`}</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"header\">\n      <h1 className=\"headerLogo\">{`${title}`}</h1>\n      <Link to=\"/settings\">\n        <RiSettings3Line className=\"set-icon\" />\n      </Link>\n      <span className=\"set\">Settings</span>\n      <RiShutDownLine className=\"log-icon\" onClick={() => onClickHandler()} />\n      <span className=\"log\" >Logout</span>\n    </div>\n  );\n};\n\nexport default Header;","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nimport './menu.css';\n\n\nconst Menu = () => {\n\n  const onClickHandler = () => {\n    localStorage.clear();\n    window.location.replace( '/' );\n  };\n\n  return (\n    <div className=\"menu-container\">\n      <input type=\"checkbox\" className=\"openSidebarMenu\" id=\"openSidebarMenu\" />\n      <label htmlFor=\"openSidebarMenu\" className=\"sidebarIconToggle\">\n        <div className=\"spinner diagonal part-1\"></div>\n        <div className=\"spinner horizontal\"></div>\n        <div className=\"spinner diagonal part-2\"></div>\n      </label>\n      <div id=\"sidebarMenu\">\n        <ul className=\"sidebarMenuInner\">\n          <li className=\"menu-title\">Plants <span>Menu Options</span></li>\n          <Link to=\"/home\">\n            <li className=\"menu-home\">Home</li>\n          </Link>\n          <Link to=\"/plants\">\n            <li className=\"menu-plants\">Plants</li>\n          </Link>\n          <Link to=\"/create-plant\">\n            <li className=\"menu-create\">Create Plant</li>\n          </Link>\n          <Link to=\"/settings\">\n            <li className=\"menu-settings\">Settings</li>\n          </Link>\n          <li onClick={() => onClickHandler()} className=\"menu-logout\" >Logout</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;","import React from 'react';\n\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './plant.scss'\n\n\nconst Plant = ( props ) => {\n\n  const jwtToken = localStorage.getItem( \"jwtToken\" );\n  const userId = localStorage.getItem( \"userId\" );\n\n\n  const onClickDeleteHandler = () => {\n\n    axios.delete( `https://tt157-backend.herokuapp.com/api/users/${userId}/plant`,\n      { data: { plant_id: props.plantData.id } }, {\n      headers: { authorization: `bearer ${jwtToken}` }\n    }\n    ).then( res => {\n      return res.data;\n    } ).catch( err => {\n      return err;\n    } );\n  };\n\n  return (\n    <div className=\"plant_box\">\n      <div className=\"myplant\">\n        <Link testid=\"plant-img-link\" to={`/plant-page/${props.plantData.id}?nickname=${props.plantData.nickname}&species=${props.plantData.species}&h2o_frequency=${props.plantData.h2o_frequency}&image=${props.plantData.image}&id=${props.plantData.id}`} className=\"plant_img \">\n          <img testid=\"plant-img\" src={`${props.plantData.image ? `${props.plantData.image}` : 'https://images.unsplash.com/photo-1497250681960-ef046c08a56e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80'}`} alt=\"plant\" />\n        </Link>\n        <div className=\"plant_data\">\n          <div testid=\"plant-data-container\">\n            <span className=\"nickname\">\n              <label testid=\"plant-nickname-label\">Nickname: </label><br />\n              <p testid=\"plant-nickname-par\">{`${props.plantData.nickname}`}</p>\n            </span>\n            <span className=\"species\">\n              <label testid=\"plant-species-label\">Species: </label><br />\n              <p testid=\"plant-species-par\">{`${props.plantData.species}`}</p>\n            </span>\n            <span className=\"h2o-frequency\">\n              <label testid=\"plant-h2o-label\">H2o Frequency: </label><br />\n              <p testid=\"plant-h2o-par\">{`${props.plantData.h2o_frequency}`}</p>\n            </span>\n          </div>\n        </div>\n        <div className=\"edit_delete_buttons\">\n          <Link testid=\"plant-edit-link\" to={`/edit-plant/${props.plantData.id}`} >\n            <button testid=\"plant-edit-button\">Edit</button>\n          </Link>\n          <button testid=\"plant-delete-button\" onClick={() => onClickDeleteHandler()} >Delete</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Plant;","import React, { useEffect, useState } from 'react';\n\nimport axios from 'axios';\n\nimport Plant from '../plant/Plant';\nimport './Plants.css'\n\n\nconst jwtToken = localStorage.getItem( \"jwtToken\" );\nconst userId = localStorage.getItem( \"userId\" );\n\nconst Plants = ( props ) => {\n\n  const [ plants, setPlants ] = useState( [] );\n  const { pageTitle } = props;\n\n  useEffect( () => {\n    axios.get( `https://tt157-backend.herokuapp.com/api/users/${userId}`, {\n      headers: { authorization: `bearer ${jwtToken}` }\n    } )\n      .then( res => {\n        pageTitle( \"PLANTS\" );\n        setPlants( res.data.plants );\n      } );\n    \n  }, [] );\n\n\n  return (\n    <div className=\"plants-container\">\n      {\n        jwtToken ?\n          <div className=\"plants\">\n            <div className=\"plants-wrapper\">\n              {\n                plants.map( plant => {\n                  return (\n                    <Plant plantData={plant} key={plant.id} />\n                  );\n                } )\n              }\n            </div>\n          </div>\n          :\n          <div>\n            ...\n          </div>\n      }\n    </div>\n  );\n};\n\n\nexport default Plants;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { browserHistory as history } from 'react-router';\n\nimport axios from 'axios';\nimport './plant-page.scss'\n\n\nconst initialPlant = {\n  image: \"\",\n  nickname: \"\",\n  species: \"\",\n  h2o_frequency: 0,\n  id: 999999\n}\n\nconst PlantPage = (props) => {\n\n  const jwtToken = localStorage.getItem(\"jwtToken\");\n  const userId = localStorage.getItem(\"userId\");\n  const [ plant, setPlant ] = useState( initialPlant );\n  const { pageTitle } = props;\n\n  const params = new URLSearchParams( window.location.search );\n  useEffect( () => {\n    pageTitle( `${params.get( \"nickname\" ).toUpperCase()}` );\n    setPlant( {\n      image: params.get( \"image\" ),\n      nickname: params.get( \"nickname\" ),\n      species: params.get( \"species\" ),\n      h2o_frequency: params.get( \"h2o_frequency\" ),\n      id: params.get( \"id\" )\n    } );\n    console.log();\n    console.log( params.get( \"species\" ) );\n  }, [] );\n\n  const onClickDeleteHandler = () => {\n\n    axios.delete(`https://tt157-backend.herokuapp.com/api/users/${userId}/plant`,\n      { data: { plant_id: plant.id } }, {\n      headers: { authorization: `bearer ${jwtToken}` }\n    }\n    ).then(res => {\n      return res.data;\n    }).catch(err => {\n      return err;\n    });\n  };\n\n  return (\n    <div className=\"plant-page-container\" >\n      {\n        jwtToken ?\n        <div className=\"plant_box\" >\n          <div className=\"myplant\">\n            <div className=\"plant_img\" testid=\"plant-img-container\">\n              <img testid=\"plant-image\" src={`${plant.image ? `${plant.image}` : 'https://images.unsplash.com/photo-1497250681960-ef046c08a56e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80'}`} alt=\"plant\" />\n            </div>\n            <div className=\"plant_data\">\n              <div testid=\"plant-data\">\n                <span className=\"name\" testid=\"plant-nickname-span\">\n                  <label testid=\"plant-nickname-label\">Nickname: </label>\n                  <p testid=\"plant-nickname-par\">{`${plant.nickname}`}</p>\n                </span>\n                <span testid=\"plant-species-span\" className=\"spec\">\n                  <label testid=\"plant-species-label\">Species: </label>\n                  <p testid=\"plant-species-par\">{`${plant.species}`}</p>\n                </span>\n                <span testid=\"plant-h2o-span\" className=\"h2o\">\n                  <label testid=\"plant-h2o-label\">H2o Frequency: </label>\n                  <p testid=\"plant-h2o-par\">{`${plant.h2o_frequency}`}</p>\n                </span>\n              </div>\n            </div>\n            <div testid=\"plant-btns-container\" className=\"edit_delete_buttons\">\n              <Link testid=\"plant-edit-btn-link\" to={`/edit-plant/${plant.id}`} >\n                <button testid=\"plant-edit-btn\">Edit</button>\n              </Link>\n              <button testid=\"plant-delete-btn\" onClick={() => onClickDeleteHandler()} >Delete</button>\n            </div>\n          </div>\n        </div>\n          :\n        <div>\n          ...\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default PlantPage;","import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nimport \"./CreateNewPlant.scss\"\n\n\nconst initialPlant = {\n    nickname: '',\n    species: '',\n    h2o_frequency: '',\n    image: ''\n}\n\nconst jwtToken = localStorage.getItem( \"jwtToken\" );\nconst userId = localStorage.getItem( \"userId\" );\n\nconst CreatePlantForm = ( props ) => {\n    const [ plant, setPlant ] = useState( initialPlant );\n    const { pageTitle } = props;\n    \n    useEffect( () => {\n        pageTitle( \"ADD A PLANT\" );\n    }, [] );\n\n    const changeHandler = e => {\n        setPlant( {\n            ...plant,\n            [ e.target.name ]: e.target.value\n        } );\n    };\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n        axios.post( 'https://tt157-backend.herokuapp.com/api/plants', {\n            nickname: plant.nickname,\n            species: plant.species,\n            h2o_frequency: plant.h2o_frequency,\n            image: plant.image\n        }, {\n            headers: {\n                authorization: `bearer ${jwtToken}`\n            }\n        } )\n            .then( plantRes => {\n                axios.post( `https://tt157-backend.herokuapp.com/api/users/${userId}`, {\n                    plant_id: plantRes.data.id,\n                }, { headers: { authorization: `bearer ${jwtToken}` } } )\n                    .then( userRes => {\n                        console.log( userRes );\n                        window.location.replace( '/plants' );\n                    } );\n            } )\n            .catch( err => console.log( \"cannot post plant\", { err } ) );\n    };\n\n\n    return (\n        <div testid=\"create-container\">\n            {\n                jwtToken ?\n                    <form className=\"add_plant_form\" onSubmit={handleSubmit}>\n                        <h2 testid=\"create-title\">Add a New Plant</h2>\n                        <input\n                            type=\"text\"\n                            name=\"nickname\"\n                            placeholder=\"Nick Name\"\n                            onChange={changeHandler}\n                            value={plant.nickname}\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"species\"\n                            placeholder=\"Species\"\n                            onChange={changeHandler}\n                            value={plant.species}\n                        />\n                        <input\n                            type=\"number\"\n                            name=\"h2o_frequency\"\n                            placeholder=\"H2oFrequency\"\n                            onChange={changeHandler}\n                            value={plant.h2o_frequency}\n                        />\n                \n                        <input\n                            type=\"string\"\n                            name=\"image\"\n                            placeholder=\"Image URL\"\n                            onChange={changeHandler}\n                            value={plant.image}\n                        />\n                \n                        <button className=\"add_plant_button\" disabled={!( plant.nickname && plant.species && plant.h2o_frequency )}>Add Plant</button>\n            \n                    </form> :\n                    <div>\n                        ...\n                    </div>\n            }\n        </div>\n    );\n};\n\n\n\n\nexport default CreatePlantForm;","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport './edit-plant.scss';\n\n\nconst EditPlant = ( props ) => {\n\n  const initialPlant = {\n    nickname: '',\n    species: '',\n    h2o_frequency: '',\n    image: ''\n  };\n\n  const jwtToken = localStorage.getItem( \"jwtToken\" );\n\n  const [ plant, setPlant ] = useState( initialPlant );\n  const { pageTitle } = props;\n\n  let queryStr = `${useLocation().pathname}`;\n  let plantId = queryStr.split( \"/\" );\n  plantId = plantId[ plantId.length - 1 ];\n  \n  useEffect( () => {\n    pageTitle( \"EDIT YOUR PLANT\" );\n    axios.get( `https://tt157-backend.herokuapp.com/api/plants/${plantId}` )\n      .then( res => {\n        setPlant( res.data );\n        return res.data;\n      } );\n  }, [] );\n\n  const changeHandler = e => {\n    setPlant( {\n      ...plant,\n      [ e.target.name ]: e.target.value\n    } );\n  };\n    \n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.put( `https://tt157-backend.herokuapp.com/api/plants/${plantId}`, {\n      id: plantId,\n      nickname: plant.nickname,\n      species: plant.species,\n      h2o_frequency: plant.h2o_frequency,\n      image: plant.image\n    }, {\n      headers: {\n        authorization: `bearer ${jwtToken}`\n      }\n    } )\n      .then( plantRes => {\n        console.log( plantRes );\n        window.location.replace( '/plants' );\n      } )\n      .catch( err => console.log( \"cannot post plant\", { err } ) );\n  };\n  \n  return (\n    <div className=\"edit-plant-container\">\n      {\n        jwtToken ?\n          <form onSubmit={handleSubmit} testid=\"edit-plant-form\">\n            <h2 testid=\"edit-plant-title\">Edit Your Plant</h2>\n            <input\n              type=\"text\"\n              name=\"nickname\"\n              placeholder=\"Nick Name\"\n              onChange={changeHandler}\n              value={plant.nickname}\n            />\n            <input\n              type=\"text\"\n              name=\"species\"\n              placeholder=\"Species\"\n              onChange={changeHandler}\n              value={plant.species}\n            />\n            <input\n              type=\"number\"\n              name=\"h2o_frequency\"\n              placeholder=\"H2oFrecuency\"\n              onChange={changeHandler}\n              value={plant.h2o_frequency}\n            />\n        \n            <input\n              type=\"string\"\n              name=\"image\"\n              placeholder=\"Image URL\"\n              onChange={changeHandler}\n              value={plant.image}\n            />\n            <button testid=\"edit-plant-submit\">Update Plant</button>\n          </form>\n          :\n          <div>\n            ...\n          </div>\n      }\n    </div>\n  );\n};\n\nexport default EditPlant;","import React, { useEffect } from 'react';\n\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nimport './signup.scss'\n\n\nconst SignupSchema = Yup.object().shape( {\n  username: Yup.string()\n    .min( 2, 'Too Short!' )\n    .max( 50, 'Too Long!' )\n    .required( 'Required' ),\n  phoneNumber: Yup.string()\n    .min( 7, 'Number is too short' )\n    .max( 15, 'Number is too long' )\n    .required( 'Required' ),\n  password: Yup.string()\n    .min( 8, 'Must be at least 8 characters long' )\n    .max( 24, 'Must be 24 characters or less')\n    .required( 'Required' ),\n} );\n\nconst Signup = ( props ) => {\n  const { pageTitle } = props;\n\n  useEffect( () => {\n    pageTitle( \"CREATE ACCOUNT\" );\n  }, [] );\n  \n  return (\n    <div className=\"form-container\">\n      <Formik\n        initialValues={{\n          username: '',\n          phoneNumber: '',\n          password: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={( values ) => {\n          axios.post( \"https://tt157-backend.herokuapp.com/api/auth/register\", {\n            username: values.username,\n            password: values.password,\n            phone_number: parseInt( values.phoneNumber.replace( /[^0-9]/g, '' ) )\n          } ).then( res => {\n            localStorage.setItem( \"jwtToken\", res.data.token )\n            let jwtToken = res.data.token;\n            const parseJwt = ( token ) => {\n              if ( !token ) {\n                  return;\n              }\n              const base64Url = token.split( '.' )[ 1 ];\n              const base64 = base64Url\n                  .replace( '-', '+' )\n                  .replace( '_', '/' );\n              return JSON.parse( window.atob( base64 ) );\n            };\n            const userId = parseJwt( jwtToken ).subject;\n            localStorage.setItem( 'userId', userId );\n            window.location.replace( '/home' );\n          })\n        }}\n      >\n        {( { errors, touched, isValid, dirty } ) => (\n          <Form className=\"signup_form\">\n            <label >Username: </label>\n            <Field name=\"username\" />\n            {errors.username && touched.username ? (\n              <div className=\"error-div\">{errors.username}</div>\n            ) : null}\n            <label>Phone Number: </label>\n            <Field name=\"phoneNumber\" />\n            {errors.phoneNumber && touched.phoneNumber ? (\n              <div className=\"error-div\">{errors.phoneNumber}</div>\n            ) : null}\n            <label>Password: </label>\n            <Field name=\"password\" type=\"password\" />\n            {errors.password && touched.password ? (\n              <div className=\"error-div\">{errors.password}</div>\n            ) : null}\n            <span className=\"button-container\">\n              <button className=\"signup_button\" type=\"submit\" disabled={!( dirty && isValid )} >Sign Me Up!</button>\n            </span>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\nexport default Signup;","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { Formik, Form, Field } from 'formik';\n\nimport './login.scss';\n\n\nconst LoginSchema = Yup.object().shape( {\n  username: Yup.string()\n    .min( 2, 'Too Short!' )\n    .max( 50, 'Too Long!' )\n    .required( 'Required' ),\n  password: Yup.string()\n    .min( 8, 'Must be at least 8 characters long' )\n    .max( 24, 'Must be 24 characters or less')\n    .required( 'Required' ),\n} );\n\nfunction Login ( props ) {\n    \n    const { pageTitle, history } = props;\n\n    useEffect( () => {\n        console.log( history );\n        const hr = ( new Date() ).getHours();\n        if ( hr === 0 || hr < 11 ) {\n            localStorage.setItem( \"greetingTime\", \"Good Morning, \" );\n        } else if ( hr > 10 && hr < 17 ) {\n            localStorage.setItem( \"greetingTime\", \"Good Afternoon, \" );\n        } else if ( hr > 16 && hr < 20 ) {\n            localStorage.setItem( \"greetingTime\", \"Good Evening, \" );\n        } else {\n            localStorage.setItem( \"greetingTime\", \"Goodnight, \" );\n        };\n        pageTitle( \"LOGIN\" );\n    }, [] );\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"form-container\">\n                <Formik\n                    initialValues={{\n                        username: '',\n                        password: '',\n                    }}\n                    validationSchema={LoginSchema}\n                    onSubmit={( values ) => {\n                        axios.post( `https://tt157-backend.herokuapp.com/api/auth/login`, {\n                            username: values.username,\n                            password: values.password\n                        } ).then( res => {\n                            localStorage.setItem( \"loginMsg\", `${localStorage.getItem(\"greetingTime\")}${res.data.message.split(\" \")[0]}!` );\n                            localStorage.setItem( \"jwtToken\", res.data.token );\n                            let jwtToken = localStorage.getItem( \"jwtToken\" );\n                            const parseJwt = ( token ) => {\n                                if ( !token ) {\n                                    return;\n                                }\n                                const base64Url = token.split( '.' )[ 1 ];\n                                const base64 = base64Url\n                                    .replace( '-', '+' )\n                                    .replace( '_', '/' );\n                                return JSON.parse( window.atob( base64 ) );\n                            };\n                            const userId = parseJwt( jwtToken ).subject;\n                            localStorage.setItem( 'userId', userId );\n                            return history.push( '/home' );\n                        } );\n                    }}\n                >\n                    {( { errors, touched, isValid, dirty } ) => (\n                        <Form className=\"login_form\">\n                            <label >Username: </label>\n                            <Field name=\"username\" />\n                            {errors.username && touched.username ? (\n                                <div className=\"error-div\">{errors.username}</div>\n                            ) : null}\n                            <label>Password: </label>\n                            <Field name=\"password\" type=\"password\" />\n                            {errors.password && touched.password ? (\n                                <div className=\"error-div\">{errors.password}</div>\n                            ) : null}\n                            \n                                <button className=\"login_button\" type=\"submit\" disabled={!( dirty && isValid )} >Log me in!</button>\n                            \n                        </Form>\n                    )}\n                </Formik>\n                <div className=\"create-account-link-container\">\n                    <p className=\"create-account-link\">Don't have an account? <Link to=\"/signup\"><span className=\"click_here\">Click Here</span></Link></p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport './user.scss'\n\n\nconst jwtToken = localStorage.getItem( \"jwtToken\" );\nconst loginMsg = localStorage.getItem( \"loginMsg\" );\n\nconst User = ( props ) => {\n  const { pageTitle } = props;\n\n  useEffect( () => {\n    pageTitle( \"HOME\" );\n  }, [] );\n\n  return (\n    <div className='container'>\n      {\n        jwtToken && loginMsg ?\n          \n          <div testid=\"home-login-msg-div\">\n            <h1 testid=\"home-title\">Water My Plants</h1>\n            <div testid=\"home-container\">\n              <div testid=\"login-with-message\">\n                <p testid=\"login-message\">{`${loginMsg}`}</p>\n                <div className=\"plant-img-container\">\n                  <img src=\"https://images.unsplash.com/photo-1520412099551-62b6bafeb5bb?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\" alt=\"plant_picture\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          :\n          <div testid=\"home-container\">\n            <h1 testid=\"home-title\">Water My Plants</h1>\n            <div testid=\"login-without-message\">\n              <p testid=\"get-started-message\">Get started by <Link to=\"/create-plant\" testid=\"create-plant-link\">creating a plant</Link></p>\n              <div className=\"plant-img-container\">\n                <img src=\"https://images.unsplash.com/photo-1520412099551-62b6bafeb5bb?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\" alt=\"plant_picture\" />\n              </div>\n            </div>\n          </div>\n      }\n    </div>\n  );\n};\n\nexport default User;","import React, { useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Settings from \"./components/settings/Settings\";\nimport Header from \"./components/header/Header\"\nimport Menu from \"./components/menu/Menu\";\nimport Plants from \"./components/plants/Plants\";\nimport PlantPage from \"./components/plant-page/PlantPage\";\nimport CreateNewPlant from \"./components/create-new-plants/CreateNewPlant\";\nimport EditPlant from \"./components/edit-plant/EditPlant\";\nimport Signup from \"./components/signup/Signup\";\nimport Login from \"./components/login/Login\";\nimport User from \"./components/user/User\";\n\nimport \"./main.scss\";\nimport \"./components/header/header.css\";\n\n\nfunction App () {\n\n  const [ title, setTitle ] = useState( \"Water My Plants\" );\n  const jwtToken = localStorage.getItem( \"jwtToken\" );\n  const pageTitleHandler = ( title ) => {\n    setTitle( title );\n    return title;\n  }\n\n  return (\n    <div className=\"App\">\n      <Header pageTitle={pageTitleHandler} propsTitle={ title } />\n      <Menu pageTitle={pageTitleHandler} />\n      <Switch>\n        <Route exact path=\"/\" render={routeProps =>\n          {return !jwtToken ?\n          <Login pageTitle={pageTitleHandler} {...routeProps} /> : <Redirect to=\"/home\" />\n          }\n        }\n        />\n        <Route exact path=\"/signup\">\n          <Signup pageTitle={pageTitleHandler} />\n        </Route>\n        <Route exact path=\"/home\">\n          {jwtToken ?\n            <User pageTitle={pageTitleHandler} /> : <Redirect to=\"/\" />\n          }\n        </Route>\n        <Route exact path=\"/plants\">\n          {jwtToken ?\n            <Plants pageTitle={pageTitleHandler} /> : <Redirect to=\"/\" />\n          }\n        </Route>\n        <Route exact path=\"/plant-page/:id?\">\n          {jwtToken ?\n            <PlantPage pageTitle={pageTitleHandler} /> : <Redirect to=\"/\" />\n          }\n        </Route>\n        <Route exact path=\"/create-plant\">\n          {jwtToken ?\n            <CreateNewPlant pageTitle={pageTitleHandler} /> : <Redirect to=\"/\" />\n          }\n        </Route>\n        <Route exact path=\"/edit-plant/:id\">\n          {jwtToken ?\n            <EditPlant pageTitle={pageTitleHandler} /> : <Redirect to=\"/\" />\n          }\n        </Route>\n        <Route exact path=\"/settings\">\n          {jwtToken ?\n            <Settings pageTitle={pageTitleHandler} /> : <Redirect to=\"/\" />\n          }\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById( 'root' )\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}